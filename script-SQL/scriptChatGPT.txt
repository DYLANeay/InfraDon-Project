CREATE TABLE personne (
    id SERIAL PRIMARY KEY,
    nom VARCHAR(20) NOT NULL,
    prenom VARCHAR(20) NOT NULL,
    adresse VARCHAR(30) NOT NULL,
    telephone VARCHAR(30) NOT NULL
);

CREATE TABLE assurance (
    id SERIAL PRIMARY KEY,
    nom VARCHAR(30) NOT NULL,
    complementaire BOOLEAN NOT NULL
);

CREATE TABLE patient (
    id SERIAL PRIMARY KEY,
    date_de_naissance DATE NOT NULL,
    sexe VARCHAR(20) CHECK (sexe IN ('h', 'f', 'nb')),
    fk_personne INT UNIQUE NOT NULL REFERENCES personne(id),
    fk_assurance INT NOT NULL REFERENCES assurance(id)
);

CREATE TABLE hopital (
    id SERIAL PRIMARY KEY,
    nom VARCHAR(30) NOT NULL,
    specialite VARCHAR(30)
);

CREATE TABLE medecin (
    id SERIAL PRIMARY KEY,
    specialite VARCHAR(30) NOT NULL,
    sexe VARCHAR(30) CHECK (sexe IN ('h', 'f', 'nb')),
    fk_personne INT UNIQUE NOT NULL REFERENCES personne(id)
);

CREATE TABLE medecin_hopital_travaille (
    id SERIAL PRIMARY KEY,
    fk_medecin INT NOT NULL REFERENCES medecin(id),
    fk_hopital INT NOT NULL REFERENCES hopital(id),
    UNIQUE (fk_medecin, fk_hopital)
);

CREATE TABLE rendez_vous (
    id SERIAL PRIMARY KEY,
    date DATE NOT NULL,
    motif VARCHAR(255),
    isFirst BOOLEAN NOT NULL,
    fk_medecin INT NOT NULL REFERENCES medecin(id),
    fk_patient INT NOT NULL REFERENCES patient(id),
    UNIQUE (fk_medecin, date),
    UNIQUE (fk_patient, date)
);

CREATE TABLE prescription (
    id SERIAL PRIMARY KEY,
    date_debut DATE NOT NULL,
    date_fin DATE NOT NULL CHECK (date_fin <= date_debut + INTERVAL '12 months'),
    fk_rendez_vous INT NOT NULL REFERENCES rendez_vous(id),
    fk_medecin INT NOT NULL REFERENCES medecin(id),
    CONSTRAINT check_prescription_date CHECK (date_debut = (SELECT date FROM rendez_vous WHERE id = fk_rendez_vous))
);

CREATE TABLE medicament (
    id SERIAL PRIMARY KEY,
    nom VARCHAR(30) NOT NULL,
    dosage VARCHAR(30),
    type VARCHAR(30) NOT NULL
);

CREATE TABLE prescription_medicament (
    id SERIAL PRIMARY KEY,
    fk_prescription INT NOT NULL REFERENCES prescription(id),
    fk_medicament INT NOT NULL REFERENCES medicament(id)
);

-- Contraintes métier supplémentaires
ALTER TABLE rendez_vous ADD CONSTRAINT unique_patient_medecin UNIQUE (fk_patient, fk_medecin, isFirst);
ALTER TABLE rendez_vous ADD CONSTRAINT check_motif_chirurgie CHECK (
    NOT (motif = 'chirurgie' AND fk_patient IN (SELECT id FROM patient WHERE date_de_naissance > CURRENT_DATE - INTERVAL '18 years'))
);
